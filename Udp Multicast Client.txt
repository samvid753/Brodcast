Udp Multicast Client

#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <arpa/inet.h>
#include<unistd.h>
#define MULTICAST_GROUP "239.0.0.1"
#define PORT 8080

int main() {
    int recv_sock;
    struct sockaddr_in recv_addr;
    char buffer[1024];


    recv_sock = socket(AF_INET, SOCK_DGRAM, 0);
    if (recv_sock < 0) {
        perror("Socket creation for receiving failed");
        exit(1);
    }


    int reuse = 1;
    if (setsockopt(recv_sock, SOL_SOCKET, SO_REUSEADDR, &reuse, sizeof(reuse)) < 0) {
        perror("Setting SO_REUSEADDR failed");
        exit(1);
    }

    memset(&recv_addr, 0, sizeof(recv_addr));
    recv_addr.sin_family = AF_INET;
    recv_addr.sin_addr.s_addr = INADDR_ANY;
    recv_addr.sin_port = htons(PORT);

    if (bind(recv_sock, (const struct sockaddr *)&recv_addr, sizeof(recv_addr)) < 0) {
        perror("Binding failed");
        exit(1);
    }

    struct ip_mreq mreq;
    mreq.imr_multiaddr.s_addr = inet_addr(MULTICAST_GROUP);
    mreq.imr_interface.s_addr = INADDR_ANY;
    if (setsockopt(recv_sock, IPPROTO_IP, IP_ADD_MEMBERSHIP, &mreq, sizeof(mreq)) < 0) {
        perror("Joining multicast group failed");
        exit(1);
    }

 
    printf("Waiting for multicast messages...\n");
    while (1) {
        int len = sizeof(recv_addr);
        int n = recvfrom(recv_sock, (char *)buffer, sizeof(buffer), 0, (struct sockaddr *)&recv_addr, &len);
        buffer[n] = '\0';
        printf("Received message: %s\n", buffer);
    }

    close(recv_sock);
    return 0;
}